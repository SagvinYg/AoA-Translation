package net.tslat.aoa3.structure.abyss;

import net.minecraft.block.state.IBlockState;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;
import net.tslat.aoa3.common.registration.BlockRegister;
import net.tslat.aoa3.structure.AoAStructure;

import java.util.Random;

public class ShadeTree3 extends AoAStructure { //StructureSize: 7x31x7
	private static final IBlockState shadowLeaves = BlockRegister.leavesShadow.getDefaultState();
	private static final IBlockState shadowLog = BlockRegister.logShadow.getDefaultState();

	public ShadeTree3() {
		super("ShadeTree3");
	}

	@Override
	protected void build(World world, Random rand, BlockPos basePos) {
		addBlock(world, basePos, 3, 0, 3, shadowLog);
		addBlock(world, basePos, 3, 1, 3, shadowLog);
		addBlock(world, basePos, 3, 2, 3, shadowLog);
		addBlock(world, basePos, 3, 3, 3, shadowLog);
		addBlock(world, basePos, 3, 4, 3, shadowLog);
		addBlock(world, basePos, 3, 5, 3, shadowLog);
		addBlock(world, basePos, 3, 6, 3, shadowLog);
		addBlock(world, basePos, 3, 7, 3, shadowLog);
		addBlock(world, basePos, 3, 8, 3, shadowLog);
		addBlock(world, basePos, 3, 9, 3, shadowLog);
		addBlock(world, basePos, 3, 10, 3, shadowLog);
		addBlock(world, basePos, 3, 11, 3, shadowLog);
		addBlock(world, basePos, 3, 12, 3, shadowLog);
		addBlock(world, basePos, 3, 13, 3, shadowLog);
		addBlock(world, basePos, 3, 14, 3, shadowLog);
		addBlock(world, basePos, 3, 15, 3, shadowLog);
		addBlock(world, basePos, 3, 16, 3, shadowLog);
		addBlock(world, basePos, 3, 17, 3, shadowLog);
		addBlock(world, basePos, 3, 18, 3, shadowLog);
		addBlock(world, basePos, 3, 19, 3, shadowLog);
		addBlock(world, basePos, 3, 20, 3, shadowLog);
		addBlock(world, basePos, 3, 21, 3, shadowLog);
		addBlock(world, basePos, 3, 22, 3, shadowLog);
		addBlock(world, basePos, 3, 23, 3, shadowLog);
		addBlock(world, basePos, 2, 24, 2, shadowLeaves);
		addBlock(world, basePos, 2, 24, 3, shadowLeaves);
		addBlock(world, basePos, 2, 24, 4, shadowLeaves);
		addBlock(world, basePos, 3, 24, 2, shadowLeaves);
		addBlock(world, basePos, 3, 24, 3, shadowLog);
		addBlock(world, basePos, 3, 24, 4, shadowLeaves);
		addBlock(world, basePos, 4, 24, 2, shadowLeaves);
		addBlock(world, basePos, 4, 24, 3, shadowLeaves);
		addBlock(world, basePos, 4, 24, 4, shadowLeaves);
		addBlock(world, basePos, 0, 25, 2, shadowLeaves);
		addBlock(world, basePos, 0, 25, 3, shadowLeaves);
		addBlock(world, basePos, 0, 25, 4, shadowLeaves);
		addBlock(world, basePos, 1, 25, 1, shadowLeaves);
		addBlock(world, basePos, 1, 25, 2, shadowLeaves);
		addBlock(world, basePos, 1, 25, 3, shadowLeaves);
		addBlock(world, basePos, 1, 25, 4, shadowLeaves);
		addBlock(world, basePos, 1, 25, 5, shadowLeaves);
		addBlock(world, basePos, 2, 25, 0, shadowLeaves);
		addBlock(world, basePos, 2, 25, 1, shadowLeaves);
		addBlock(world, basePos, 2, 25, 2, shadowLeaves);
		addBlock(world, basePos, 2, 25, 3, shadowLeaves);
		addBlock(world, basePos, 2, 25, 4, shadowLeaves);
		addBlock(world, basePos, 2, 25, 5, shadowLeaves);
		addBlock(world, basePos, 2, 25, 6, shadowLeaves);
		addBlock(world, basePos, 3, 25, 0, shadowLeaves);
		addBlock(world, basePos, 3, 25, 1, shadowLeaves);
		addBlock(world, basePos, 3, 25, 2, shadowLeaves);
		addBlock(world, basePos, 3, 25, 3, shadowLog);
		addBlock(world, basePos, 3, 25, 4, shadowLeaves);
		addBlock(world, basePos, 3, 25, 5, shadowLeaves);
		addBlock(world, basePos, 3, 25, 6, shadowLeaves);
		addBlock(world, basePos, 4, 25, 0, shadowLeaves);
		addBlock(world, basePos, 4, 25, 1, shadowLeaves);
		addBlock(world, basePos, 4, 25, 2, shadowLeaves);
		addBlock(world, basePos, 4, 25, 3, shadowLeaves);
		addBlock(world, basePos, 4, 25, 4, shadowLeaves);
		addBlock(world, basePos, 4, 25, 5, shadowLeaves);
		addBlock(world, basePos, 4, 25, 6, shadowLeaves);
		addBlock(world, basePos, 5, 25, 1, shadowLeaves);
		addBlock(world, basePos, 5, 25, 2, shadowLeaves);
		addBlock(world, basePos, 5, 25, 3, shadowLeaves);
		addBlock(world, basePos, 5, 25, 4, shadowLeaves);
		addBlock(world, basePos, 5, 25, 5, shadowLeaves);
		addBlock(world, basePos, 6, 25, 2, shadowLeaves);
		addBlock(world, basePos, 6, 25, 3, shadowLeaves);
		addBlock(world, basePos, 6, 25, 4, shadowLeaves);
		addBlock(world, basePos, 0, 26, 2, shadowLeaves);
		addBlock(world, basePos, 0, 26, 3, shadowLeaves);
		addBlock(world, basePos, 0, 26, 4, shadowLeaves);
		addBlock(world, basePos, 1, 26, 1, shadowLeaves);
		addBlock(world, basePos, 1, 26, 2, shadowLeaves);
		addBlock(world, basePos, 1, 26, 3, shadowLeaves);
		addBlock(world, basePos, 1, 26, 4, shadowLeaves);
		addBlock(world, basePos, 1, 26, 5, shadowLeaves);
		addBlock(world, basePos, 2, 26, 0, shadowLeaves);
		addBlock(world, basePos, 2, 26, 1, shadowLeaves);
		addBlock(world, basePos, 2, 26, 2, shadowLeaves);
		addBlock(world, basePos, 2, 26, 3, shadowLeaves);
		addBlock(world, basePos, 2, 26, 4, shadowLeaves);
		addBlock(world, basePos, 2, 26, 5, shadowLeaves);
		addBlock(world, basePos, 2, 26, 6, shadowLeaves);
		addBlock(world, basePos, 3, 26, 0, shadowLeaves);
		addBlock(world, basePos, 3, 26, 1, shadowLeaves);
		addBlock(world, basePos, 3, 26, 2, shadowLeaves);
		addBlock(world, basePos, 3, 26, 3, shadowLog);
		addBlock(world, basePos, 3, 26, 4, shadowLeaves);
		addBlock(world, basePos, 3, 26, 5, shadowLeaves);
		addBlock(world, basePos, 3, 26, 6, shadowLeaves);
		addBlock(world, basePos, 4, 26, 0, shadowLeaves);
		addBlock(world, basePos, 4, 26, 1, shadowLeaves);
		addBlock(world, basePos, 4, 26, 2, shadowLeaves);
		addBlock(world, basePos, 4, 26, 3, shadowLeaves);
		addBlock(world, basePos, 4, 26, 4, shadowLeaves);
		addBlock(world, basePos, 4, 26, 5, shadowLeaves);
		addBlock(world, basePos, 4, 26, 6, shadowLeaves);
		addBlock(world, basePos, 5, 26, 1, shadowLeaves);
		addBlock(world, basePos, 5, 26, 2, shadowLeaves);
		addBlock(world, basePos, 5, 26, 3, shadowLeaves);
		addBlock(world, basePos, 5, 26, 4, shadowLeaves);
		addBlock(world, basePos, 5, 26, 5, shadowLeaves);
		addBlock(world, basePos, 6, 26, 2, shadowLeaves);
		addBlock(world, basePos, 6, 26, 3, shadowLeaves);
		addBlock(world, basePos, 6, 26, 4, shadowLeaves);
		addBlock(world, basePos, 1, 27, 2, shadowLeaves);
		addBlock(world, basePos, 1, 27, 3, shadowLeaves);
		addBlock(world, basePos, 1, 27, 4, shadowLeaves);
		addBlock(world, basePos, 2, 27, 1, shadowLeaves);
		addBlock(world, basePos, 2, 27, 2, shadowLeaves);
		addBlock(world, basePos, 2, 27, 3, shadowLeaves);
		addBlock(world, basePos, 2, 27, 4, shadowLeaves);
		addBlock(world, basePos, 2, 27, 5, shadowLeaves);
		addBlock(world, basePos, 3, 27, 1, shadowLeaves);
		addBlock(world, basePos, 3, 27, 2, shadowLeaves);
		addBlock(world, basePos, 3, 27, 3, shadowLeaves);
		addBlock(world, basePos, 3, 27, 4, shadowLeaves);
		addBlock(world, basePos, 3, 27, 5, shadowLeaves);
		addBlock(world, basePos, 4, 27, 1, shadowLeaves);
		addBlock(world, basePos, 4, 27, 2, shadowLeaves);
		addBlock(world, basePos, 4, 27, 3, shadowLeaves);
		addBlock(world, basePos, 4, 27, 4, shadowLeaves);
		addBlock(world, basePos, 4, 27, 5, shadowLeaves);
		addBlock(world, basePos, 5, 27, 2, shadowLeaves);
		addBlock(world, basePos, 5, 27, 3, shadowLeaves);
		addBlock(world, basePos, 5, 27, 4, shadowLeaves);
		addBlock(world, basePos, 1, 28, 2, shadowLeaves);
		addBlock(world, basePos, 1, 28, 3, shadowLeaves);
		addBlock(world, basePos, 1, 28, 4, shadowLeaves);
		addBlock(world, basePos, 2, 28, 1, shadowLeaves);
		addBlock(world, basePos, 2, 28, 2, shadowLeaves);
		addBlock(world, basePos, 2, 28, 3, shadowLeaves);
		addBlock(world, basePos, 2, 28, 4, shadowLeaves);
		addBlock(world, basePos, 2, 28, 5, shadowLeaves);
		addBlock(world, basePos, 3, 28, 1, shadowLeaves);
		addBlock(world, basePos, 3, 28, 2, shadowLeaves);
		addBlock(world, basePos, 3, 28, 3, shadowLeaves);
		addBlock(world, basePos, 3, 28, 4, shadowLeaves);
		addBlock(world, basePos, 3, 28, 5, shadowLeaves);
		addBlock(world, basePos, 4, 28, 1, shadowLeaves);
		addBlock(world, basePos, 4, 28, 2, shadowLeaves);
		addBlock(world, basePos, 4, 28, 3, shadowLeaves);
		addBlock(world, basePos, 4, 28, 4, shadowLeaves);
		addBlock(world, basePos, 4, 28, 5, shadowLeaves);
		addBlock(world, basePos, 5, 28, 2, shadowLeaves);
		addBlock(world, basePos, 5, 28, 3, shadowLeaves);
		addBlock(world, basePos, 5, 28, 4, shadowLeaves);
		addBlock(world, basePos, 2, 29, 2, shadowLeaves);
		addBlock(world, basePos, 2, 29, 3, shadowLeaves);
		addBlock(world, basePos, 2, 29, 4, shadowLeaves);
		addBlock(world, basePos, 3, 29, 2, shadowLeaves);
		addBlock(world, basePos, 3, 29, 3, shadowLeaves);
		addBlock(world, basePos, 3, 29, 4, shadowLeaves);
		addBlock(world, basePos, 4, 29, 2, shadowLeaves);
		addBlock(world, basePos, 4, 29, 3, shadowLeaves);
		addBlock(world, basePos, 4, 29, 4, shadowLeaves);
		addBlock(world, basePos, 2, 30, 2, shadowLeaves);
		addBlock(world, basePos, 2, 30, 3, shadowLeaves);
		addBlock(world, basePos, 2, 30, 4, shadowLeaves);
		addBlock(world, basePos, 3, 30, 2, shadowLeaves);
		addBlock(world, basePos, 3, 30, 3, shadowLeaves);
		addBlock(world, basePos, 3, 30, 4, shadowLeaves);
		addBlock(world, basePos, 4, 30, 2, shadowLeaves);
		addBlock(world, basePos, 4, 30, 3, shadowLeaves);
		addBlock(world, basePos, 4, 30, 4, shadowLeaves);
	}
}
