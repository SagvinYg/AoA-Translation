package net.tslat.aoa3.structure.lelyetia;

import net.minecraft.block.state.IBlockState;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;
import net.tslat.aoa3.common.registration.BlockRegister;
import net.tslat.aoa3.structure.AoAStructure;

import java.util.Random;

public class InvertedAchonyTree2 extends AoAStructure { //StructureSize: 7x32x7
	private static final IBlockState achonyLeaves = BlockRegister.leavesAchony.getDefaultState();
	private static final IBlockState achonyLog = BlockRegister.logAchony.getDefaultState();
	private static final IBlockState lelyetianLeaves = BlockRegister.leavesLelyetian.getDefaultState();

	public InvertedAchonyTree2() {
		super("InvertedAchonyTree2");
	}

	@Override
	protected void build(World world, Random rand, BlockPos basePos) {
		addBlock(world, basePos, 3, 0, 3, lelyetianLeaves);
		addBlock(world, basePos, 3, 1, 3, lelyetianLeaves);
		addBlock(world, basePos, 3, 2, 3, lelyetianLeaves);
		addBlock(world, basePos, 2, 3, 2, lelyetianLeaves);
		addBlock(world, basePos, 2, 3, 3, lelyetianLeaves);
		addBlock(world, basePos, 2, 3, 4, lelyetianLeaves);
		addBlock(world, basePos, 3, 3, 2, lelyetianLeaves);
		addBlock(world, basePos, 3, 3, 3, lelyetianLeaves);
		addBlock(world, basePos, 3, 3, 4, lelyetianLeaves);
		addBlock(world, basePos, 4, 3, 2, lelyetianLeaves);
		addBlock(world, basePos, 4, 3, 3, lelyetianLeaves);
		addBlock(world, basePos, 4, 3, 4, lelyetianLeaves);
		addBlock(world, basePos, 2, 4, 2, lelyetianLeaves);
		addBlock(world, basePos, 2, 4, 3, lelyetianLeaves);
		addBlock(world, basePos, 2, 4, 4, lelyetianLeaves);
		addBlock(world, basePos, 3, 4, 2, lelyetianLeaves);
		addBlock(world, basePos, 3, 4, 3, lelyetianLeaves);
		addBlock(world, basePos, 3, 4, 4, lelyetianLeaves);
		addBlock(world, basePos, 4, 4, 2, lelyetianLeaves);
		addBlock(world, basePos, 4, 4, 3, lelyetianLeaves);
		addBlock(world, basePos, 4, 4, 4, lelyetianLeaves);
		addBlock(world, basePos, 2, 5, 2, lelyetianLeaves);
		addBlock(world, basePos, 2, 5, 3, lelyetianLeaves);
		addBlock(world, basePos, 2, 5, 4, lelyetianLeaves);
		addBlock(world, basePos, 3, 5, 2, lelyetianLeaves);
		addBlock(world, basePos, 3, 5, 3, lelyetianLeaves);
		addBlock(world, basePos, 3, 5, 4, lelyetianLeaves);
		addBlock(world, basePos, 4, 5, 2, lelyetianLeaves);
		addBlock(world, basePos, 4, 5, 3, lelyetianLeaves);
		addBlock(world, basePos, 4, 5, 4, lelyetianLeaves);
		addBlock(world, basePos, 0, 6, 0, achonyLeaves);
		addBlock(world, basePos, 0, 6, 6, achonyLeaves);
		addBlock(world, basePos, 2, 6, 2, lelyetianLeaves);
		addBlock(world, basePos, 2, 6, 3, lelyetianLeaves);
		addBlock(world, basePos, 2, 6, 4, lelyetianLeaves);
		addBlock(world, basePos, 3, 6, 2, lelyetianLeaves);
		addBlock(world, basePos, 3, 6, 3, lelyetianLeaves);
		addBlock(world, basePos, 3, 6, 4, lelyetianLeaves);
		addBlock(world, basePos, 4, 6, 2, lelyetianLeaves);
		addBlock(world, basePos, 4, 6, 3, lelyetianLeaves);
		addBlock(world, basePos, 4, 6, 4, lelyetianLeaves);
		addBlock(world, basePos, 6, 6, 0, achonyLeaves);
		addBlock(world, basePos, 6, 6, 6, achonyLeaves);
		addBlock(world, basePos, 0, 7, 0, achonyLeaves);
		addBlock(world, basePos, 0, 7, 1, achonyLeaves);
		addBlock(world, basePos, 0, 7, 5, achonyLeaves);
		addBlock(world, basePos, 0, 7, 6, achonyLeaves);
		addBlock(world, basePos, 1, 7, 0, achonyLeaves);
		addBlock(world, basePos, 1, 7, 6, achonyLeaves);
		addBlock(world, basePos, 2, 7, 2, lelyetianLeaves);
		addBlock(world, basePos, 2, 7, 3, lelyetianLeaves);
		addBlock(world, basePos, 2, 7, 4, lelyetianLeaves);
		addBlock(world, basePos, 3, 7, 2, lelyetianLeaves);
		addBlock(world, basePos, 3, 7, 3, lelyetianLeaves);
		addBlock(world, basePos, 3, 7, 4, lelyetianLeaves);
		addBlock(world, basePos, 4, 7, 2, lelyetianLeaves);
		addBlock(world, basePos, 4, 7, 3, lelyetianLeaves);
		addBlock(world, basePos, 4, 7, 4, lelyetianLeaves);
		addBlock(world, basePos, 5, 7, 0, achonyLeaves);
		addBlock(world, basePos, 5, 7, 6, achonyLeaves);
		addBlock(world, basePos, 6, 7, 0, achonyLeaves);
		addBlock(world, basePos, 6, 7, 1, achonyLeaves);
		addBlock(world, basePos, 6, 7, 5, achonyLeaves);
		addBlock(world, basePos, 6, 7, 6, achonyLeaves);
		addBlock(world, basePos, 0, 8, 0, achonyLeaves);
		addBlock(world, basePos, 0, 8, 1, achonyLeaves);
		addBlock(world, basePos, 0, 8, 2, achonyLeaves);
		addBlock(world, basePos, 0, 8, 3, achonyLeaves);
		addBlock(world, basePos, 0, 8, 4, achonyLeaves);
		addBlock(world, basePos, 0, 8, 5, achonyLeaves);
		addBlock(world, basePos, 0, 8, 6, achonyLeaves);
		addBlock(world, basePos, 1, 8, 0, achonyLeaves);
		addBlock(world, basePos, 1, 8, 6, achonyLeaves);
		addBlock(world, basePos, 2, 8, 0, achonyLeaves);
		addBlock(world, basePos, 2, 8, 2, lelyetianLeaves);
		addBlock(world, basePos, 2, 8, 3, lelyetianLeaves);
		addBlock(world, basePos, 2, 8, 4, lelyetianLeaves);
		addBlock(world, basePos, 2, 8, 6, achonyLeaves);
		addBlock(world, basePos, 3, 8, 0, achonyLeaves);
		addBlock(world, basePos, 3, 8, 2, lelyetianLeaves);
		addBlock(world, basePos, 3, 8, 3, lelyetianLeaves);
		addBlock(world, basePos, 3, 8, 4, lelyetianLeaves);
		addBlock(world, basePos, 3, 8, 6, achonyLeaves);
		addBlock(world, basePos, 4, 8, 0, achonyLeaves);
		addBlock(world, basePos, 4, 8, 2, lelyetianLeaves);
		addBlock(world, basePos, 4, 8, 3, lelyetianLeaves);
		addBlock(world, basePos, 4, 8, 4, lelyetianLeaves);
		addBlock(world, basePos, 4, 8, 6, achonyLeaves);
		addBlock(world, basePos, 5, 8, 0, achonyLeaves);
		addBlock(world, basePos, 5, 8, 6, achonyLeaves);
		addBlock(world, basePos, 6, 8, 0, achonyLeaves);
		addBlock(world, basePos, 6, 8, 1, achonyLeaves);
		addBlock(world, basePos, 6, 8, 2, achonyLeaves);
		addBlock(world, basePos, 6, 8, 3, achonyLeaves);
		addBlock(world, basePos, 6, 8, 4, achonyLeaves);
		addBlock(world, basePos, 6, 8, 5, achonyLeaves);
		addBlock(world, basePos, 6, 8, 6, achonyLeaves);
		addBlock(world, basePos, 1, 9, 1, achonyLeaves);
		addBlock(world, basePos, 1, 9, 2, achonyLeaves);
		addBlock(world, basePos, 1, 9, 3, achonyLeaves);
		addBlock(world, basePos, 1, 9, 4, achonyLeaves);
		addBlock(world, basePos, 1, 9, 5, achonyLeaves);
		addBlock(world, basePos, 2, 9, 1, achonyLeaves);
		addBlock(world, basePos, 2, 9, 2, achonyLeaves);
		addBlock(world, basePos, 2, 9, 3, achonyLeaves);
		addBlock(world, basePos, 2, 9, 4, achonyLeaves);
		addBlock(world, basePos, 2, 9, 5, achonyLeaves);
		addBlock(world, basePos, 3, 9, 1, achonyLeaves);
		addBlock(world, basePos, 3, 9, 2, achonyLeaves);
		addBlock(world, basePos, 3, 9, 3, achonyLeaves);
		addBlock(world, basePos, 3, 9, 4, achonyLeaves);
		addBlock(world, basePos, 3, 9, 5, achonyLeaves);
		addBlock(world, basePos, 4, 9, 1, achonyLeaves);
		addBlock(world, basePos, 4, 9, 2, achonyLeaves);
		addBlock(world, basePos, 4, 9, 3, achonyLeaves);
		addBlock(world, basePos, 4, 9, 4, achonyLeaves);
		addBlock(world, basePos, 4, 9, 5, achonyLeaves);
		addBlock(world, basePos, 5, 9, 1, achonyLeaves);
		addBlock(world, basePos, 5, 9, 2, achonyLeaves);
		addBlock(world, basePos, 5, 9, 3, achonyLeaves);
		addBlock(world, basePos, 5, 9, 4, achonyLeaves);
		addBlock(world, basePos, 5, 9, 5, achonyLeaves);
		addBlock(world, basePos, 2, 10, 2, achonyLeaves);
		addBlock(world, basePos, 2, 10, 3, achonyLeaves);
		addBlock(world, basePos, 2, 10, 4, achonyLeaves);
		addBlock(world, basePos, 3, 10, 2, achonyLeaves);
		addBlock(world, basePos, 3, 10, 3, achonyLog);
		addBlock(world, basePos, 3, 10, 4, achonyLeaves);
		addBlock(world, basePos, 4, 10, 2, achonyLeaves);
		addBlock(world, basePos, 4, 10, 3, achonyLeaves);
		addBlock(world, basePos, 4, 10, 4, achonyLeaves);
		addBlock(world, basePos, 3, 11, 3, achonyLog);
		addBlock(world, basePos, 3, 12, 3, achonyLog);
		addBlock(world, basePos, 2, 13, 2, achonyLeaves);
		addBlock(world, basePos, 2, 13, 3, achonyLeaves);
		addBlock(world, basePos, 2, 13, 4, achonyLeaves);
		addBlock(world, basePos, 3, 13, 2, achonyLeaves);
		addBlock(world, basePos, 3, 13, 3, achonyLog);
		addBlock(world, basePos, 3, 13, 4, achonyLeaves);
		addBlock(world, basePos, 4, 13, 2, achonyLeaves);
		addBlock(world, basePos, 4, 13, 3, achonyLeaves);
		addBlock(world, basePos, 4, 13, 4, achonyLeaves);
		addBlock(world, basePos, 3, 14, 3, achonyLog);
		addBlock(world, basePos, 3, 15, 3, achonyLog);
		addBlock(world, basePos, 3, 16, 3, achonyLog);
		addBlock(world, basePos, 2, 17, 2, achonyLeaves);
		addBlock(world, basePos, 2, 17, 3, achonyLeaves);
		addBlock(world, basePos, 2, 17, 4, achonyLeaves);
		addBlock(world, basePos, 3, 17, 2, achonyLeaves);
		addBlock(world, basePos, 3, 17, 3, achonyLog);
		addBlock(world, basePos, 3, 17, 4, achonyLeaves);
		addBlock(world, basePos, 4, 17, 2, achonyLeaves);
		addBlock(world, basePos, 4, 17, 3, achonyLeaves);
		addBlock(world, basePos, 4, 17, 4, achonyLeaves);
		addBlock(world, basePos, 3, 18, 3, achonyLog);
		addBlock(world, basePos, 3, 19, 3, achonyLog);
		addBlock(world, basePos, 3, 20, 3, achonyLog);
		addBlock(world, basePos, 3, 21, 3, achonyLog);
		addBlock(world, basePos, 2, 22, 2, achonyLeaves);
		addBlock(world, basePos, 2, 22, 3, achonyLeaves);
		addBlock(world, basePos, 2, 22, 4, achonyLeaves);
		addBlock(world, basePos, 3, 22, 2, achonyLeaves);
		addBlock(world, basePos, 3, 22, 3, achonyLog);
		addBlock(world, basePos, 3, 22, 4, achonyLeaves);
		addBlock(world, basePos, 4, 22, 2, achonyLeaves);
		addBlock(world, basePos, 4, 22, 3, achonyLeaves);
		addBlock(world, basePos, 4, 22, 4, achonyLeaves);
		addBlock(world, basePos, 3, 23, 3, achonyLog);
		addBlock(world, basePos, 3, 24, 3, achonyLog);
		addBlock(world, basePos, 2, 25, 2, achonyLeaves);
		addBlock(world, basePos, 2, 25, 3, achonyLeaves);
		addBlock(world, basePos, 2, 25, 4, achonyLeaves);
		addBlock(world, basePos, 3, 25, 2, achonyLeaves);
		addBlock(world, basePos, 3, 25, 3, achonyLog);
		addBlock(world, basePos, 3, 25, 4, achonyLeaves);
		addBlock(world, basePos, 4, 25, 2, achonyLeaves);
		addBlock(world, basePos, 4, 25, 3, achonyLeaves);
		addBlock(world, basePos, 4, 25, 4, achonyLeaves);
		addBlock(world, basePos, 3, 26, 3, achonyLog);
		addBlock(world, basePos, 3, 27, 3, achonyLog);
		addBlock(world, basePos, 3, 28, 3, achonyLog);
		addBlock(world, basePos, 2, 29, 2, achonyLeaves);
		addBlock(world, basePos, 2, 29, 3, achonyLeaves);
		addBlock(world, basePos, 2, 29, 4, achonyLeaves);
		addBlock(world, basePos, 3, 29, 2, achonyLeaves);
		addBlock(world, basePos, 3, 29, 3, achonyLog);
		addBlock(world, basePos, 3, 29, 4, achonyLeaves);
		addBlock(world, basePos, 4, 29, 2, achonyLeaves);
		addBlock(world, basePos, 4, 29, 3, achonyLeaves);
		addBlock(world, basePos, 4, 29, 4, achonyLeaves);
		addBlock(world, basePos, 3, 30, 3, achonyLog);
		addBlock(world, basePos, 3, 31, 3, achonyLog);
	}
}
